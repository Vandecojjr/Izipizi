@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<AuthorizeView>
    <Authorized>
        <div class="page mud-layout">
             
            <main style="display: flex;">
                    <div class="nav-scrollable" style=" position: fixed; top: 0; left: 0; width: 250px; height: 100%; overflow-y: auto; background: white;" onclick="document.querySelector('.navbar-toggler').click()">
                            <NavMenu />
                    </div>
               
                <div style="margin-left: 250px; padding: 20px; width: calc(100% - 250px);">
                <div class="top-row px-4" style="background:#065A82;">
                    <MudChip Icon="@Icons.Material.Filled.Person" Color="Color.Dark">@context.User.Identity?.Name</MudChip>
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <MudIconButton ButtonType="ButtonType.Submit" Icon="@Icons.Material.Filled.ExitToApp" Style="color:white;" />
                    </form>
                        @* <MudIconButton Href="/suporte" Target="_blank" Size="Size.Small" Style="color:white;" Title="Suporte" Icon="@Icons.Material.Filled.ContactSupport"></MudIconButton> *@
                </div>
                    <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Style="background:#ECEFF1;" Class="py-2">
                    @Body
                    </MudContainer>
                </div>
            </main>
        </div>

    </Authorized>
    <NotAuthorized>
            @Body
    </NotAuthorized>
</AuthorizeView>
@code {
    private string? currentUrl;
    
    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
